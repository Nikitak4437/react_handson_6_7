{"ast":null,"code":"var _jsxFileName = \"/Users/surajkakade/Downloads/Nikita/React /react_handson_6_7/src/pages/Student.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Student = props => {\n  _s();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  // const location = useLocation(); // returns the location object \n\n  //returns the :id\n  // console.log(location);\n  const [details, setDetails] = useState({\n    name: \"\",\n    department: \"\",\n    rating: \"\"\n  });\n  useEffect(() => {\n    if (id == null || id == \"undefined\") {\n      console.log(\"ID NOT FOUND\");\n    } else {\n      var _props$detailsList;\n      console.log(\"ID FOUND\");\n      if (((_props$detailsList = props.detailsList) === null || _props$detailsList === void 0 ? void 0 : _props$detailsList.length) > 0) {\n        console.log(\"CALL ID CONDITION\");\n        console.log(props.detailsList);\n        setDetails(props.detailsList[id]);\n      }\n      // console.log(props.detailsList.length);\n    }\n  }, []);\n  const updateInput = (event, ch) => {\n    details[ch] = event.target.value;\n    setDetails(details);\n  };\n  const refForm = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: refForm,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"EMPLOYEE FORM HANDLING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"name\"\n            // value={details.name}\n            ,\n            defaultValue: details.name,\n            onChange: event => updateInput(event, \"name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Department :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"department\",\n            defaultValue: details.department\n\n            //     value={details.department}\n            ,\n            onChange: event => updateInput(event, \"department\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Rating :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rating\",\n            defaultValue: details.rating\n            // value={details.rating}\n            ,\n            onChange: event => updateInput(event, \"rating\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.add_details(details);\n            setDetails({\n              name: \"\",\n              department: \"\",\n              rating: \"\"\n            });\n            refForm.current.reset();\n          },\n          type: \"button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Student, \"qgoWUBh5z3kPZ82y+4O+7uYOvhU=\", false, function () {\n  return [useParams];\n});\n_c = Student;\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useParams","Student","props","id","console","log","details","setDetails","name","department","rating","detailsList","length","updateInput","event","ch","target","value","refForm","add_details","current","reset"],"sources":["/Users/surajkakade/Downloads/Nikita/React /react_handson_6_7/src/pages/Student.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\nconst Student = (props) => {\n  const { id } = useParams();   \n  console.log(id);\n  // const location = useLocation(); // returns the location object \n\n  //returns the :id\n// console.log(location);\n  const [details, setDetails] = useState({\n    name: \"\",\n    department: \"\",\n    rating: \"\",\n  });\n  useEffect(() => {\n    if(id == null || id==\"undefined\"){\n      console.log(\"ID NOT FOUND\");\n    }else{\n      console.log(\"ID FOUND\");\n      \n        if(props.detailsList?.length>0){\n    \n        console.log(\"CALL ID CONDITION\");\n        console.log(props.detailsList);\n        setDetails(props.detailsList[id]);\n      }\n      // console.log(props.detailsList.length);\n    }\n      \n  }, []);\n\n  const updateInput = (event, ch) => {\n    details[ch] = event.target.value;\n    setDetails(details);\n  };\n  const refForm = useRef(null);\n  return (\n    <div>\n      <form ref={refForm}>\n        <div>\n          <h1>EMPLOYEE FORM HANDLING</h1>\n          <label>\n            Name :\n            <input\n              className=\"name\"\n              // value={details.name}\n              defaultValue={details.name}\n              onChange={(event) => updateInput(event, \"name\")}\n            />\n          </label>\n          <br />\n          <label>\n            Department :\n            <input\n              className=\"department\"\n              defaultValue={details.department}\n\n              //     value={details.department}\n              onChange={(event) => updateInput(event, \"department\")}\n            />\n          </label>\n          <br />\n          <label>\n            Rating :\n            <input\n              className=\"rating\"\n              defaultValue={details.rating}\n              // value={details.rating}\n              onChange={(event) => updateInput(event, \"rating\")}\n            />\n          </label>\n          <br />\n          <button\n            onClick={() => {\n              props.add_details(details);\n              setDetails({\n                name: \"\",\n                department: \"\",\n                rating: \"\",\n              });\n              refForm.current.reset();\n            }}\n            type=\"button\"\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default Student;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}